정적 메소드를 오버라이드하면
그 메소드는 무조건 실행

▶업캐스팅: 부모의 참조변수로 자식 객체 가리키는 것(묵시적 허용)
Shape s1 = new Rectangle(); --> 자식이기 때문에 가능
부모의 필드와 메소드는 갖고 올 수 있지만,
	 자식의 필드와 메소드는 못 갖고 옴

▶다운캐스팅: 자식의 참조변수로 부모 객체를 가리키는 것(묵시적 허용 안됨)
Parent p = new Child();  -- UpCasting
	p.print() 자식의 print() 호출 ----------------- 질문
Child c = (Child)p; -- DownCasting
	c.print(); 자식 객체의 print() 호출

▶동적 바인딩
하나의 객체로 시스템을 확장시킬 수 있음
void print(Shape s)  ------------- (비슷: Shape s = new Rectangle();)

▶instanceof 연산자
if ( obj instanceof Rectangle ) ---- obj가 Rectangle 이면, 

▶종단 클래스
서브 클래스에서 재정의 할 수 없도록 final을 선언한다.
클래스 앞에다가 하면 그 클래스에 속한 모든 것을 재선언 불가능

▶is-a 관계
"A는 B의 일종이다" -- 상속 단방향

▶has-a 관계
"~는 ~를 가지고 있다" -- 구성 사용해서 모델링
- Composition: A가 사라지면 B가 사라짐
- Aggregation: A가 사라져도 B가 사라지지 않음

▶